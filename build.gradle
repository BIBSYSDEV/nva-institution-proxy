plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
}

group 'no.unit.nva'
version '1.0-SNAPSHOT'


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def cucumberVersion = '5.5.0'

dependencies {
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: '1.11.749'
    implementation group: 'com.github.BIBSYSDEV', name: 'nva-commons', version: '7cdfdbd967'
    implementation group: 'com.github.BIBSYSDEV', name: 'nva-testutils', version: 'v0.1.2'
    implementation group: 'org.zalando', name: 'problem', version: '0.24.0'
    implementation group: 'org.apache.jena', name: 'jena', version: '3.14.0', ext: 'pom'
    implementation group: 'org.apache.jena', name: 'jena-arq', version: '3.14.0'

    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: cucumberVersion
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: cucumberVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
}


test {
    useJUnitPlatform()
    failFast = true
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
    toolVersion = '8.31'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }
    }
}